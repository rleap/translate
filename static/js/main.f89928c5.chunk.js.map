{"version":3,"sources":["contexts/LanguageContext.js","components/Field.js","contexts/ColorContext.js","components/Button.js","components/UserCreate.js","components/LanguageSelector.js","components/App.js","index.js"],"names":["Context","React","createContext","LanguageStore","_React$Component","_getPrototypeOf2","_this","Object","classCallCheck","this","_len","arguments","length","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","concat","state","language","onLanguageChange","setState","inherits","createClass","key","value","react_default","a","createElement","Provider","objectSpread","props","children","Component","Field","text","context","className","contextType","LanguageContext","Button","color","Consumer","_ref","renderSubmit","_this2","ColorContext","renderButton","UserCreate","components_Field","components_Button","LanguageSelector","onClick","App","LanguageContext_LanguageStore","components_LanguageSelector","components_UserCreate","ReactDOM","render","components_App","document","querySelector"],"mappings":"8KAEMA,EAAUC,IAAMC,cAAc,WAEvBC,EAAb,SAAAC,GAAA,SAAAD,IAAA,IAAAE,EAAAC,EAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAN,GAAA,QAAAO,EAAAC,UAAAC,OAAAC,EAAA,IAAAC,MAAAJ,GAAAK,EAAA,EAAAA,EAAAL,EAAAK,IAAAF,EAAAE,GAAAJ,UAAAI,GAAA,OAAAT,EAAAC,OAAAS,EAAA,EAAAT,CAAAE,MAAAJ,EAAAE,OAAAU,EAAA,EAAAV,CAAAJ,IAAAe,KAAAC,MAAAd,EAAA,CAAAI,MAAAW,OAAAP,MACEQ,MAAQ,CAAEC,SAAU,WADtBhB,EAGEiB,iBAAmB,SAAAD,GACjBhB,EAAKkB,SAAS,CAAEF,cAJpBhB,EAAA,OAAAC,OAAAkB,EAAA,EAAAlB,CAAAJ,EAAAC,GAAAG,OAAAmB,EAAA,EAAAnB,CAAAJ,EAAA,EAAAwB,IAAA,SAAAC,MAAA,WAQI,OACEC,EAAAC,EAAAC,cAAC/B,EAAQgC,SAAT,CACEJ,MAAKrB,OAAA0B,EAAA,EAAA1B,CAAA,GAAOE,KAAKY,MAAZ,CAAmBE,iBAAkBd,KAAKc,oBAE9Cd,KAAKyB,MAAMC,cAZpBhC,EAAA,CAAmCF,IAAMmC,WAkB1BpC,ICjBTqC,mLAIF,IAAMC,EAAiC,YAA1B7B,KAAK8B,QAAQjB,SAAyB,OAAS,OAE5D,OACEO,EAAAC,EAAAC,cAAA,OAAKS,UAAU,YACbX,EAAAC,EAAAC,cAAA,aAAQO,GACRT,EAAAC,EAAAC,cAAA,sBATY9B,IAAMmC,WAApBC,EACGI,YAAcC,EAcRL,QClBApC,MAAMC,gBCgCNyC,uLAzBArB,GACX,MAAoB,YAAbA,EAAyB,SAAW,kDAGhCsB,GAAO,IAAAtC,EAAAG,KAClB,OACEoB,EAAAC,EAAAC,cAAA,UAAQS,UAAS,aAAApB,OAAewB,IAC9Bf,EAAAC,EAAAC,cAACW,EAAgBG,SAAjB,KACG,SAAAC,GAAA,IAAGxB,EAAHwB,EAAGxB,SAAH,OAAkBhB,EAAKyC,aAAazB,uCAMpC,IAAA0B,EAAAvC,KAGP,OACEoB,EAAAC,EAAAC,cAACkB,EAAaJ,SAAd,KACG,SAAAD,GAAK,OAAII,EAAKE,aAAaN,YAtBf3C,IAAMmC,WCOZe,EATI,WACjB,OACEtB,EAAAC,EAAAC,cAAA,OAAKS,UAAU,WACbX,EAAAC,EAAAC,cAACqB,EAAD,MACAvB,EAAAC,EAAAC,cAACsB,EAAD,QCLAC,mLAGK,IAAAhD,EAAAG,KACP,OACEoB,EAAAC,EAAAC,cAAA,gCAEEF,EAAAC,EAAAC,cAAA,KACES,UAAU,UACVe,QAAS,kBAAMjD,EAAKiC,QAAQhB,iBAAiB,cAE/CM,EAAAC,EAAAC,cAAA,KACES,UAAU,UACVe,QAAS,kBAAMjD,EAAKiC,QAAQhB,iBAAiB,oBAbxBtB,IAAMmC,WAA/BkB,EACGb,YAAcC,EAmBRY,QCFAE,mLAbX,OACE3B,EAAAC,EAAAC,cAAA,OAAKS,UAAU,gBACbX,EAAAC,EAAAC,cAAC0B,EAAD,KACE5B,EAAAC,EAAAC,cAAC2B,EAAD,MACA7B,EAAAC,EAAAC,cAACkB,EAAajB,SAAd,CAAuBJ,MAAM,UAC3BC,EAAAC,EAAAC,cAAC4B,EAAD,gBAPM1D,IAAMmC,WCFxBwB,IAASC,OAAOhC,EAAAC,EAAAC,cAAC+B,EAAD,MAASC,SAASC,cAAc","file":"static/js/main.f89928c5.chunk.js","sourcesContent":["import React from 'react';\n\nconst Context = React.createContext('english');\n\nexport class LanguageStore extends React.Component {\n  state = { language: 'english' };\n\n  onLanguageChange = language => {\n    this.setState({ language });\n  };\n\n  render() {\n    return (\n      <Context.Provider\n        value={{ ...this.state, onLanguageChange: this.onLanguageChange }}\n      >\n        {this.props.children}\n      </Context.Provider>\n    );\n  }\n}\n\nexport default Context;\n","import React from 'react';\nimport LanguageContext from '../contexts/LanguageContext';\n\n// Must use Consumer approach is using multiple contexts\n\nclass Field extends React.Component {\n  static contextType = LanguageContext;\n\n  render() {\n    const text = this.context.language === 'english' ? 'Name' : 'Naam';\n\n    return (\n      <div className=\"ui field\">\n        <label>{text}</label>\n        <input />\n      </div>\n    );\n  }\n}\n\nexport default Field;\n","import React from 'react';\n\nexport default React.createContext();\n","import React from 'react';\nimport LanguageContext from '../contexts/LanguageContext';\nimport ColorContext from '../contexts/ColorContext';\n\n// Must use Consumer approach is using multiple contexts\n\nclass Button extends React.Component {\n  //Only used if using this.context\n  //static contextType = LanguageContext;\n  renderSubmit(language) {\n    return language === 'english' ? 'Submit' : 'Voorleggen';\n  }\n\n  renderButton(color) {\n    return (\n      <button className={`ui button ${color}`}>\n        <LanguageContext.Consumer>\n          {({ language }) => this.renderSubmit(language)}\n        </LanguageContext.Consumer>\n      </button>\n    );\n  }\n\n  render() {\n    //Only used if using this.context\n    //const text = this.context === 'english' ? 'Submit' : 'Voorleggen';\n    return (\n      <ColorContext.Consumer>\n        {color => this.renderButton(color)}\n      </ColorContext.Consumer>\n    );\n  }\n}\n\nexport default Button;\n","import React from 'react';\nimport Field from './Field';\nimport Button from './Button';\n\nconst UserCreate = () => {\n  return (\n    <div className=\"ui form\">\n      <Field />\n      <Button />\n    </div>\n  );\n};\n\nexport default UserCreate;\n","import React from 'react';\nimport LanguageContext from '../contexts/LanguageContext';\n\nclass LanguageSelector extends React.Component {\n  static contextType = LanguageContext;\n\n  render() {\n    return (\n      <div>\n        Select a language:\n        <i\n          className=\"flag us\"\n          onClick={() => this.context.onLanguageChange('english')}\n        />\n        <i\n          className=\"flag nl\"\n          onClick={() => this.context.onLanguageChange('dutch')}\n        />\n      </div>\n    );\n  }\n}\n\nexport default LanguageSelector;\n","import React from 'react';\nimport UserCreate from './UserCreate';\nimport { LanguageStore } from '../contexts/LanguageContext';\nimport ColorContext from '../contexts/ColorContext';\nimport LanguageSelector from './LanguageSelector';\n\nclass App extends React.Component {\n  render() {\n    return (\n      <div className=\"ui container\">\n        <LanguageStore>\n          <LanguageSelector />\n          <ColorContext.Provider value=\"purple\">\n            <UserCreate />\n          </ColorContext.Provider>\n        </LanguageStore>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\n\nReactDOM.render(<App />, document.querySelector('#root'));\n"],"sourceRoot":""}